{"remainingRequest":"/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nlab-2/Desktop/dweb/fapi/myapi/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/nlab-2/Desktop/dweb/fapi/myapi/src/App.vue","mtime":1644381089906},{"path":"/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nlab-2/Desktop/dweb/fapi/myapi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}